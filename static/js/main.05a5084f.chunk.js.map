{"version":3,"sources":["axios.js","requests.js","components/Banner.js","components/Nav.js","components/Row.js","components/Content.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","API_KEY","process","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","useState","movie","setMovie","useEffect","a","get","request","data","results","Math","floor","random","length","fetchData","console","log","backdrop_path","className","style","backgroundSize","backgroundImage","name","title","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","src","alt","currentMovieID","Row","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","map","onClick","id","type","release_date","trailerData","key","getTrailerData","handleClick","poster_path","videoId","opts","height","width","playerVars","autoplay","Content","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAMeA,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAS,iCCHPC,EAAUC,mCAcDC,EAZE,CACbC,cAAc,6BAAD,OAA+BH,GAC5CI,sBAAsB,wBAAD,OAA0BJ,EAA1B,sBACrBK,cAAc,4BAAD,OAA8BL,EAA9B,mBACbM,kBAAkB,2BAAD,OAA6BN,EAA7B,mBACjBO,kBAAkB,2BAAD,OAA6BP,EAA7B,mBACjBQ,kBAAkB,2BAAD,OAA6BR,EAA7B,mBACjBS,mBAAmB,2BAAD,OAA6BT,EAA7B,qBAClBU,mBAAmB,2BAAD,OAA6BV,EAA7B,oB,OCLhBD,EAAU,uCAsDDY,MAhDf,WAAmB,IAAD,EAJAC,EAAKC,EAIL,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,KAoBhB,OAjBAC,qBAAU,WAAM,4CACd,kCAAAC,EAAA,sEACwBrB,EAAMsB,IAAIjB,EAASE,uBAD3C,cACQgB,EADR,OAEEJ,EACEI,EAAQC,KAAKC,QACXC,KAAKC,MAAMD,KAAKE,UAAL,iBAAiBL,QAAjB,IAAiBA,GAAjB,UAAiBA,EAASC,YAA1B,iBAAiB,EAAeC,eAAhC,aAAiB,EAAwBI,cAAzC,QAAiD,GAAK,KAJvE,kBAQSN,GART,4CADc,uBAAC,WAAD,wBAWdO,KACC,IAEHC,QAAQC,IAAId,GACZa,QAAQC,IAAI9B,EAAQgB,EAAMe,eAGxB,wBAAQC,UAAU,SAClBC,MACI,CACIC,eAAiB,QACjBC,gBAAe,eAAWnC,GAAO,OAACgB,QAAD,IAACA,OAAD,EAACA,EAAOe,eAA1B,OAJvB,SAUI,qBAAKC,UAAU,oBAAf,SACA,sBAAKA,UAAU,kBAAf,UACI,oBAAIA,UAAU,eAAd,SACKhB,EAAMoB,OAAN,OAAcpB,QAAd,IAAcA,OAAd,EAAcA,EAAOqB,SAArB,OAA8BrB,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAOsB,iBAE1C,sBAAKN,UAAU,iBAAf,UACI,wBAAQA,UAAU,gBAAlB,kBACA,wBAAQA,UAAU,gBAAlB,wBAGJ,oBAAIA,UAAU,qBAAd,UA7CMnB,EA6CsC,iBAACG,QAAD,IAACA,OAAD,EAACA,EAAOuB,gBAAR,QAAkB,GA7CnDzB,EA6CuD,KA5ChE,OAAHD,QAAG,IAAHA,OAAA,EAAAA,EAAKc,QAAQb,EAAID,EAAI2B,OAAO,EAAG1B,EAAE,GAAI,MAAQD,aCuBzC4B,MA7Bf,WAAgB,IAAD,EACc1B,oBAAS,GADvB,mBACN2B,EADM,KACAC,EADA,KAYb,OAVAzB,qBAAU,WAKR,OAJA0B,OAAOC,iBAAiB,UAAU,WAC5BD,OAAOE,QAAU,IAAKH,GAAW,GAChCA,GAAW,MAEX,WACLC,OAAOG,oBAAoB,aAE5B,IAGD,sBAAKf,UAAS,cAASU,GAAQ,aAA/B,UACE,qBACEV,UAAU,WACVgB,IAAI,yEACJC,IAAI,iBAGN,qBACEjB,UAAU,aACVgB,IAAI,yEACJC,IAAI,oB,QCnBRC,G,MAAiB,IAqENC,MAnEf,YAAuD,IAAxCd,EAAuC,EAAvCA,MAAOe,EAAgC,EAAhCA,SAAgC,IAAtBC,kBAAsB,WACxBtC,mBAAS,IADe,mBAC7CuC,EAD6C,KACrCC,EADqC,OAEhBxC,mBAAS,IAFO,mBAE7CyC,EAF6C,KAEjCC,EAFiC,KA8CpD,OAzCAvC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACwBrB,EAAMsB,IAAIgC,GADlC,cACQ/B,EADR,OAEEkC,EAAUlC,EAAQC,KAAKC,SAFzB,kBAGSF,GAHT,4CADc,uBAAC,WAAD,wBAMdO,KACC,CAACwB,IAmCF,sBAAKpB,UAAU,MAAf,UACE,6BAAKK,IACL,qBAAKL,UAAU,cAAf,SACGsB,EAAOI,KAAI,SAAC1C,GAAD,OACV,qBAEE2C,QAAS,kBAvCC,SAAC3C,GAInB,GAHEa,QAAQC,IAAI,mBAAoBoB,GAChCrB,QAAQC,IAAI,WAAYd,EAAM4C,IAE5BV,IAAiBlC,EAAM4C,GACzB/B,QAAQC,IAAI,uBACZ2B,EAAc,IACdP,EAAgB,OACX,CACLrB,QAAQC,IAAI,uBACZoB,EAAiBlC,EAAM4C,GACvB/B,QAAQC,IAAId,GACb,IAAI6C,EAA6B,OAAhB,OAAL7C,QAAK,IAALA,OAAA,EAAAA,EAAO8C,cAAsB,KAAO,QAJ1C,4CAKN,gCAAA3C,EAAA,sEAC2BrB,EAAMsB,IAAN,uCAA0CyC,EAA1C,YAAkD7C,EAAM4C,GAAxD,qDAD3B,OACOG,EADP,OAEClC,QAAQC,KAAI,UAAAiC,EAAYzC,KAAKC,QAAQ,UAAzB,eAA6ByC,MAAK,IAC9CP,GAAc,UAAAM,EAAYzC,KAAKC,QAAQ,UAAzB,eAA6ByC,MAAK,IAHjD,4CALM,0DAUNC,GACApC,QAAQC,IAAI,oBAAoBoB,IAoBVgB,CAAYlD,IAC3BgB,UAAS,iBAAYqB,GAAc,mBACnCL,IAAG,UA1DC,wCA0DD,OACDK,EAAarC,EAAMmD,YAAcnD,EAAMe,eAEzCkB,IAAKjC,EAAMoB,MANNpB,EAAM4C,SAUhBJ,GAAc,cAAC,IAAD,CAASY,QAASZ,EAAYa,KAxBpC,CACXC,OAAQ,MACRC,MAAO,OACPC,WAAY,CACVC,SAAU,UChCDC,MAdf,WACI,OACI,gCACI,cAAC,EAAD,CAAKrC,MAAM,oBAAoBe,SAAUjD,EAASE,sBAAuBgD,YAAU,IACvF,cAAC,EAAD,CAAKhB,MAAM,WAAWe,SAAUjD,EAASC,gBACzC,cAAC,EAAD,CAAKiC,MAAM,SAASe,SAAUjD,EAASI,oBACvC,cAAC,EAAD,CAAK8B,MAAM,SAASe,SAAUjD,EAASK,oBACvC,cAAC,EAAD,CAAK6B,MAAM,SAASe,SAAUjD,EAASM,oBACvC,cAAC,EAAD,CAAK4B,MAAM,gBAAgBe,SAAUjD,EAASQ,yBCGvCgE,MAVf,WACE,OACE,sBAAK3C,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCEO4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.05a5084f.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\"\n});\n\nexport default instance;","const API_KEY = process.env.REACT_APP_TMDB_API_KEY;\n\nconst requests = {\n    fetchTrending: `/trending/all/day?api_key=${API_KEY}`,\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en_us`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=1079`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n};\n\n\nexport default requests;","import React, { useState, useEffect } from \"react\";\nimport axios from \"../axios\";\nimport requests from \"../requests\";\n\n\nconst baseURL = \"https://image.tmdb.org/t/p/original/\";\n\nfunction truncate(str, n){\n    return str?.length >n ? str.substr(0, n-1)+ \"...\" : str;\n}\n\nfunction Banner() {\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchNetflixOriginals);\n      setMovie(\n        request.data.results[\n          Math.floor(Math.random() * (request?.data?.results?.length??1) - 1)\n        // 4\n        ]\n      );\n      return request;\n    }\n    fetchData();\n  }, []);\n\n  console.log(movie);\n  console.log(baseURL+movie.backdrop_path)\n\n  return (\n    <header className=\"banner\"\n    style={\n        {\n            backgroundSize : \"cover\",\n            backgroundImage : `url(\"${baseURL+movie?.backdrop_path}\")`,\n        \n        }\n    }\n    >\n        \n        <div className=\"banner_fadeBottom\">\n        <div className=\"banner_contents\">\n            <h1 className=\"banner_title\">\n                {movie.name || movie?.title || movie?.original_name}\n            </h1>\n            <div className=\"banner_buttons\" >\n                <button className=\"banner_button\">Play</button>\n                <button className=\"banner_button\">My List</button>\n            </div>\n\n            <h1 className=\"banner_description\">{truncate(movie?.overview??\"\", 500)}</h1>\n        </div>\n        </div>\n    </header>\n  );\n}\n\nexport default Banner;\n","import React, { useEffect, useState } from \"react\";\n\nfunction Nav() {\n  const [show, handleShow] = useState(false);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 100) handleShow(true);\n      else handleShow(false);\n    });\n    return () => {\n      window.removeEventListener(\"scroll\");\n    };\n  }, []);\n\n  return (\n    <div className={`nav ${show && \"nav_black\"}`}>\n      <img\n        className=\"nav_logo\"\n        src=\"https://logos-download.com/wp-content/uploads/2016/03/Netflix_logo.png\"\n        alt=\"Netflix Logo\"\n      />\n\n      <img\n        className=\"nav_avatar\"\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\n        alt=\"user_avatar\"\n      />\n    </div>\n  );\n}\n\nexport default Nav;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"../axios\";\nimport YouTube from \"react-youtube\";\nimport movieTrailer from 'movie-trailer';\n\nconst baseURL = \"https://image.tmdb.org/t/p/original/\";\nvar currentMovieID = \"\";\n\nfunction Row({ title, fetchUrl, isLargeRow = false }) {\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  const handleClick = (movie) => {\n      console.log(\"Playing movie id\", currentMovieID);\n      console.log(\"movie id\", movie.id);\n\n    if (currentMovieID===movie.id) {\n      console.log(\"clicked for removal\");\n      setTrailerUrl(\"\");\n      currentMovieID= \"\";\n    } else {\n      console.log(\"clicked for playing\");\n      currentMovieID = movie.id;\n      console.log(movie);\n     var type = (movie?.release_date==null) ? \"tv\" : \"movie\";\n     async function getTrailerData(){\n      const trailerData = await axios.get(`https://api.themoviedb.org/3/${type}/${movie.id}/videos?api_key=85044227745de1325521b8c38082ad74`);\n      console.log(trailerData.data.results[0]?.key||\"\");\n      setTrailerUrl(trailerData.data.results[0]?.key||\"\");\n     }\n     getTrailerData();\n     console.log(\"currently playing\",currentMovieID)\n        \n    }\n  };\n\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1,\n    },\n  };\n\n  return (\n    <div className=\"row\">\n      <h1>{title}</h1>\n      <div className=\"row_posters\">\n        {movies.map((movie) => (\n          <img\n            key={movie.id}\n            onClick={() => handleClick(movie)}\n            className={`poster ${isLargeRow && \"row_posterLarge\"}`}\n            src={`${baseURL}${\n              isLargeRow ? movie.poster_path : movie.backdrop_path\n            }`}\n            alt={movie.name}\n          />\n        ))}\n      </div>\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n    </div>\n  );\n}\n\nexport default Row;\n","import React from 'react'\nimport requests from '../requests';\nimport Row from './Row';\n\nfunction Content() {\n    return (\n        <div>\n            <Row title=\"Netflix Originals\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow/>\n        <Row title=\"Trending\" fetchUrl={requests.fetchTrending}/>\n        <Row title=\"Action\" fetchUrl={requests.fetchActionMovies}/>\n        <Row title=\"Comedy\" fetchUrl={requests.fetchComedyMovies}/>\n        <Row title=\"Horror\" fetchUrl={requests.fetchHorrorMovies}/>\n        <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\n        \n        </div>\n    )\n}\n\nexport default Content\n","import './App.css';\nimport Banner from './components/Banner';\nimport Nav from './components/Nav';\nimport Content from './components/Content';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Nav/>\n        <Banner/>\n        <Content/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}